# T007: Contract Test - DELETE /api/quotes/{id}
# Sprint 006 Phase 2: TDD - API Contracts

task_id: "T007"
title: "Contract Test: DELETE /api/quotes/{id}"
description: "Test the DELETE /api/quotes/{id} endpoint for soft-deleting quotes with audit trail"
type: contract-test
priority: HIGH
test_file: "packages/web/src/api/__tests__/quotes.delete.contract.test.ts"
workspace_root: "${WORKSPACE_ROOT}"

api:
  endpoint: "/api/quotes/{id}"
  method: DELETE
  base_url: "${API_BASE_URL}"

test_scenarios:
  - name: "Success: Soft delete quote"
    request:
      path_params:
        id: "${EXISTING_QUOTE_ID}"
      headers:
        Authorization: "Bearer ${ADMIN_TOKEN}"
    expected_response:
      status_code: 200
      schema: QuoteDeleteResponse
      body_contains:
        - "id"
        - "deletedAt"
        - "deletedBy"
      body_validation:
        - "deletedAt timestamp is present"
        - "quote still retrievable with deleted flag"

  - name: "Success: Delete with reason"
    request:
      path_params:
        id: "${EXISTING_QUOTE_ID}"
      body:
        reason: "Duplicate quote - merged into Q-456"
    expected_response:
      status_code: 200
      body_validation:
        - "deletion reason recorded in audit log"

  - name: "Error: Quote not found"
    request:
      path_params:
        id: "NON_EXISTENT_ID"
    expected_response:
      status_code: 404
      error_message: "Quote not found"

  - name: "Error: Already deleted"
    request:
      path_params:
        id: "${DELETED_QUOTE_ID}"
    expected_response:
      status_code: 410
      error_message: "Quote already deleted"

  - name: "Error: Cannot delete approved quote"
    request:
      path_params:
        id: "${APPROVED_QUOTE_ID}"
    expected_response:
      status_code: 403
      error_message: "Cannot delete approved quote - requires admin privileges"

  - name: "Error: Unauthorized - missing token"
    request:
      path_params:
        id: "${EXISTING_QUOTE_ID}"
      headers:
        Authorization: ""
    expected_response:
      status_code: 401
      error_message: "Authentication required"

  - name: "Error: Forbidden - insufficient permissions"
    request:
      path_params:
        id: "${EXISTING_QUOTE_ID}"
      headers:
        Authorization: "Bearer ${USER_TOKEN}"
    expected_response:
      status_code: 403
      error_message: "Insufficient permissions - admin role required"

validation_policy:
  schema_validation: true
  response_time_max_ms: 300
  require_authentication: true
  audit_logging: true

technical_debt:
  - scenario: "Hard delete not supported - may accumulate deleted records"
    mitigation: "Implement archival system or hard delete after 90 days"
  - scenario: "Cascade delete rules unclear for related entities"
    mitigation: "Define explicit cascade behavior for quote items, attachments"
  - scenario: "No restoration mechanism for accidentally deleted quotes"
    mitigation: "Add undelete/restore endpoint for admins"
