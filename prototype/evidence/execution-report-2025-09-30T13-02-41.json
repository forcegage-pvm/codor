{
  "startTime": "2025-09-30T13:02:37.684Z",
  "tasks": {
    "T006": {
      "taskId": "T006",
      "title": "Real MCP Browser Automation",
      "startTime": "2025-09-30T13:02:37.687Z",
      "steps": [
        {
          "action": {
            "actionId": "PREREQ.1",
            "description": "Verify MCP executor exists",
            "type": "FILE_VALIDATION",
            "parameters": {
              "filePath": "prototype/executors/mcp-browser.js",
              "validationType": "EXISTS"
            }
          },
          "phase": "PREREQ",
          "taskId": "T006",
          "startTime": "2025-09-30T13:02:37.689Z",
          "success": true,
          "data": {
            "filePath": "D:\\Dropbox\\Repositories\\Python\\codor\\prototype\\executors\\mcp-browser.js",
            "validationType": "EXISTS",
            "exists": true,
            "timestamp": "2025-09-30T13:02:37.690Z",
            "size": 7841,
            "modified": "2025-09-30T13:01:16.161Z",
            "isDirectory": false
          },
          "error": null,
          "endTime": "2025-09-30T13:02:37.692Z",
          "durationMs": 3
        },
        {
          "action": {
            "actionId": "PREREQ.2",
            "description": "Verify Node.js and npx available",
            "type": "TERMINAL_COMMAND",
            "parameters": {
              "command": "node --version"
            }
          },
          "phase": "PREREQ",
          "taskId": "T006",
          "startTime": "2025-09-30T13:02:37.694Z",
          "success": true,
          "data": {
            "command": "node --version",
            "workingDirectory": "D:/Dropbox/Repositories/Python/codor",
            "exitCode": 0,
            "stdout": "v22.19.0\r\n",
            "stderr": "",
            "expectedExitCodes": [
              0
            ],
            "timestamp": "2025-09-30T13:02:37.950Z"
          },
          "error": null,
          "endTime": "2025-09-30T13:02:37.951Z",
          "durationMs": 257
        },
        {
          "action": {
            "actionId": "STEP.1",
            "description": "Initialize MCP connection",
            "type": "MCP_BROWSER_COMMAND",
            "parameters": {
              "action": "initialize"
            }
          },
          "phase": "STEP",
          "taskId": "T006",
          "startTime": "2025-09-30T13:02:37.953Z",
          "success": true,
          "data": {
            "action": "initialize",
            "initialized": true,
            "capabilities": {
              "protocolVersion": "2024-11-05",
              "capabilities": {
                "logging": {},
                "tools": {
                  "listChanged": true
                }
              },
              "serverInfo": {
                "name": "chrome_devtools",
                "title": "Chrome DevTools MCP server",
                "version": "0.5.1"
              }
            },
            "timestamp": "2025-09-30T13:02:41.139Z"
          },
          "error": null,
          "endTime": "2025-09-30T13:02:41.139Z",
          "durationMs": 3186
        },
        {
          "action": {
            "actionId": "STEP.2",
            "description": "List available MCP tools",
            "type": "MCP_BROWSER_COMMAND",
            "parameters": {
              "action": "list_tools"
            }
          },
          "phase": "STEP",
          "taskId": "T006",
          "startTime": "2025-09-30T13:02:41.141Z",
          "success": true,
          "data": {
            "action": "list_tools",
            "tools": [
              {
                "name": "list_console_messages",
                "description": "List all console messages for the currently selected page",
                "inputSchema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Debugging",
                  "readOnlyHint": true
                }
              },
              {
                "name": "emulate_cpu",
                "description": "Emulates CPU throttling by slowing down the selected page's execution.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "throttlingRate": {
                      "type": "number",
                      "minimum": 1,
                      "maximum": 20,
                      "description": "The CPU throttling rate representing the slowdown factor 1-20x. Set the rate to 1 to disable throttling"
                    }
                  },
                  "required": [
                    "throttlingRate"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Emulation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "emulate_network",
                "description": "Emulates network conditions such as throttling on the selected page.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "throttlingOption": {
                      "type": "string",
                      "enum": [
                        "No emulation",
                        "Slow 3G",
                        "Fast 3G",
                        "Slow 4G",
                        "Fast 4G"
                      ],
                      "description": "The network throttling option to emulate. Available throttling options are: No emulation, Slow 3G, Fast 3G, Slow 4G, Fast 4G. Set to \"No emulation\" to disable."
                    }
                  },
                  "required": [
                    "throttlingOption"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Emulation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "click",
                "description": "Clicks on the provided element",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "type": "string",
                      "description": "The uid of an element on the page from the page content snapshot"
                    },
                    "dblClick": {
                      "type": "boolean",
                      "description": "Set to true for double clicks. Default is false."
                    }
                  },
                  "required": [
                    "uid"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Input automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "drag",
                "description": "Drag an element onto another element",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "from_uid": {
                      "type": "string",
                      "description": "The uid of the element to drag"
                    },
                    "to_uid": {
                      "type": "string",
                      "description": "The uid of the element to drop into"
                    }
                  },
                  "required": [
                    "from_uid",
                    "to_uid"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Input automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "fill",
                "description": "Type text into a input, text area or select an option from a <select> element.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "type": "string",
                      "description": "The uid of an element on the page from the page content snapshot"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value to fill in"
                    }
                  },
                  "required": [
                    "uid",
                    "value"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Input automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "fill_form",
                "description": "Fill out multiple form elements at once",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "elements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "description": "The uid of the element to fill out"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for the element"
                          }
                        },
                        "required": [
                          "uid",
                          "value"
                        ],
                        "additionalProperties": false
                      },
                      "description": "Elements from snapshot to fill out."
                    }
                  },
                  "required": [
                    "elements"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Input automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "hover",
                "description": "Hover over the provided element",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "type": "string",
                      "description": "The uid of an element on the page from the page content snapshot"
                    }
                  },
                  "required": [
                    "uid"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Input automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "upload_file",
                "description": "Upload a file through a provided element.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "type": "string",
                      "description": "The uid of the file input element or an element that will open file chooser on the page from the page content snapshot"
                    },
                    "filePath": {
                      "type": "string",
                      "description": "The local path of the file to upload"
                    }
                  },
                  "required": [
                    "uid",
                    "filePath"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Input automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "get_network_request",
                "description": "Gets a network request by URL. You can get all requests by calling list_network_requests.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The URL of the request."
                    }
                  },
                  "required": [
                    "url"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Network",
                  "readOnlyHint": true
                }
              },
              {
                "name": "list_network_requests",
                "description": "List all requests for the currently selected page",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "pageSize": {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "description": "Maximum number of requests to return. When omitted, returns all requests."
                    },
                    "pageIdx": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Page number to return (0-based). When omitted, returns the first page."
                    },
                    "resourceTypes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "document",
                          "stylesheet",
                          "image",
                          "media",
                          "font",
                          "script",
                          "texttrack",
                          "xhr",
                          "fetch",
                          "prefetch",
                          "eventsource",
                          "websocket",
                          "manifest",
                          "signedexchange",
                          "ping",
                          "cspviolationreport",
                          "preflight",
                          "fedcm",
                          "other"
                        ]
                      },
                      "description": "Filter requests to only return requests of the specified resource types. When omitted or empty, returns all requests."
                    }
                  },
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Network",
                  "readOnlyHint": true
                }
              },
              {
                "name": "close_page",
                "description": "Closes the page by its index. The last open page cannot be closed.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "pageIdx": {
                      "type": "number",
                      "description": "The index of the page to close. Call list_pages to list pages."
                    }
                  },
                  "required": [
                    "pageIdx"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Navigation automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "handle_dialog",
                "description": "If a browser dialog was opened, use this command to handle it",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "enum": [
                        "accept",
                        "dismiss"
                      ],
                      "description": "Whether to dismiss or accept the dialog"
                    },
                    "promptText": {
                      "type": "string",
                      "description": "Optional prompt text to enter into the dialog."
                    }
                  },
                  "required": [
                    "action"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Input automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "list_pages",
                "description": "Get a list of pages open in the browser.",
                "inputSchema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Navigation automation",
                  "readOnlyHint": true
                }
              },
              {
                "name": "navigate_page",
                "description": "Navigates the currently selected page to a URL.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URL to navigate the page to"
                    }
                  },
                  "required": [
                    "url"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Navigation automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "navigate_page_history",
                "description": "Navigates the currently selected page.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "navigate": {
                      "type": "string",
                      "enum": [
                        "back",
                        "forward"
                      ],
                      "description": "Whether to navigate back or navigate forward in the selected pages history"
                    }
                  },
                  "required": [
                    "navigate"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Navigation automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "new_page",
                "description": "Creates a new page",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URL to load in a new page."
                    }
                  },
                  "required": [
                    "url"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Navigation automation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "resize_page",
                "description": "Resizes the selected page's window so that the page has specified dimension",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "width": {
                      "type": "number",
                      "description": "Page width"
                    },
                    "height": {
                      "type": "number",
                      "description": "Page height"
                    }
                  },
                  "required": [
                    "width",
                    "height"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Emulation",
                  "readOnlyHint": false
                }
              },
              {
                "name": "select_page",
                "description": "Select a page as a context for future tool calls.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "pageIdx": {
                      "type": "number",
                      "description": "The index of the page to select. Call list_pages to list pages."
                    }
                  },
                  "required": [
                    "pageIdx"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Navigation automation",
                  "readOnlyHint": true
                }
              },
              {
                "name": "performance_analyze_insight",
                "description": "Provides more detailed information on a specific Performance Insight that was highlighed in the results of a trace recording.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "insightName": {
                      "type": "string",
                      "description": "The name of the Insight you want more information on. For example: \"DocumentLatency\" or \"LCPBreakdown\""
                    }
                  },
                  "required": [
                    "insightName"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Performance",
                  "readOnlyHint": true
                }
              },
              {
                "name": "performance_start_trace",
                "description": "Starts a performance trace recording on the selected page. This can be used to look for performance problems and insights to improve the performance of the page. It will also report Core Web Vital (CWV) scores for the page.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "reload": {
                      "type": "boolean",
                      "description": "Determines if, once tracing has started, the page should be automatically reloaded."
                    },
                    "autoStop": {
                      "type": "boolean",
                      "description": "Determines if the trace recording should be automatically stopped."
                    }
                  },
                  "required": [
                    "reload",
                    "autoStop"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Performance",
                  "readOnlyHint": true
                }
              },
              {
                "name": "performance_stop_trace",
                "description": "Stops the active performance trace recording on the selected page.",
                "inputSchema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Performance",
                  "readOnlyHint": true
                }
              },
              {
                "name": "take_screenshot",
                "description": "Take a screenshot of the page or element.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "format": {
                      "type": "string",
                      "enum": [
                        "png",
                        "jpeg"
                      ],
                      "default": "png",
                      "description": "Type of format to save the screenshot as. Default is \"png\""
                    },
                    "quality": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100,
                      "description": "Compression quality for JPEG format (0-100). Higher values mean better quality but larger file sizes. Ignored for PNG format."
                    },
                    "uid": {
                      "type": "string",
                      "description": "The uid of an element on the page from the page content snapshot. If omitted takes a pages screenshot."
                    },
                    "fullPage": {
                      "type": "boolean",
                      "description": "If set to true takes a screenshot of the full page instead of the currently visible viewport. Incompatible with uid."
                    }
                  },
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Debugging",
                  "readOnlyHint": true
                }
              },
              {
                "name": "evaluate_script",
                "description": "Evaluate a JavaScript function inside the currently selected page. Returns the response as JSON\nso returned values have to JSON-serializable.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "function": {
                      "type": "string",
                      "description": "A JavaScript function to run in the currently selected page.\nExample without arguments: `() => {\n  return document.title\n}` or `async () => {\n  return await fetch(\"example.com\")\n}`.\nExample with arguments: `(el) => {\n  return el.innerText;\n}`\n"
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "description": "The uid of an element on the page from the page content snapshot"
                          }
                        },
                        "required": [
                          "uid"
                        ],
                        "additionalProperties": false
                      },
                      "description": "An optional list of arguments to pass to the function."
                    }
                  },
                  "required": [
                    "function"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Debugging",
                  "readOnlyHint": false
                }
              },
              {
                "name": "take_snapshot",
                "description": "Take a text snapshot of the currently selected page. The snapshot lists page elements along with a unique\nidentifier (uid). Always use the latest snapshot. Prefer taking a snapshot over taking a screenshot.",
                "inputSchema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Debugging",
                  "readOnlyHint": true
                }
              },
              {
                "name": "wait_for",
                "description": "Wait for the specified text to appear on the selected page.",
                "inputSchema": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "Text to appear on the page"
                    }
                  },
                  "required": [
                    "text"
                  ],
                  "additionalProperties": false,
                  "$schema": "http://json-schema.org/draft-07/schema#"
                },
                "annotations": {
                  "category": "Navigation automation",
                  "readOnlyHint": true
                }
              }
            ],
            "count": 26,
            "timestamp": "2025-09-30T13:02:41.144Z"
          },
          "error": null,
          "endTime": "2025-09-30T13:02:41.145Z",
          "durationMs": 4
        },
        {
          "action": {
            "actionId": "STEP.3",
            "description": "Create new page and navigate to example.com",
            "type": "MCP_BROWSER_COMMAND",
            "parameters": {
              "action": "new_page",
              "url": "https://example.com"
            }
          },
          "phase": "STEP",
          "taskId": "T006",
          "startTime": "2025-09-30T13:02:41.146Z",
          "success": true,
          "data": {
            "action": "new_page",
            "parameters": {
              "url": "https://example.com"
            },
            "result": {
              "content": [
                {
                  "type": "text",
                  "text": "Browser was not found at the configured executablePath (C:\\Program)"
                }
              ],
              "isError": true
            },
            "timestamp": "2025-09-30T13:02:41.151Z"
          },
          "error": null,
          "endTime": "2025-09-30T13:02:41.152Z",
          "durationMs": 6
        },
        {
          "action": {
            "actionId": "STEP.4",
            "description": "Take page snapshot",
            "type": "MCP_BROWSER_COMMAND",
            "parameters": {
              "action": "take_snapshot"
            }
          },
          "phase": "STEP",
          "taskId": "T006",
          "startTime": "2025-09-30T13:02:41.154Z",
          "success": true,
          "data": {
            "action": "take_snapshot",
            "parameters": {},
            "result": {
              "content": [
                {
                  "type": "text",
                  "text": "Browser was not found at the configured executablePath (C:\\Program)"
                }
              ],
              "isError": true
            },
            "timestamp": "2025-09-30T13:02:41.156Z"
          },
          "error": null,
          "endTime": "2025-09-30T13:02:41.156Z",
          "durationMs": 2
        },
        {
          "action": {
            "actionId": "STEP.5",
            "description": "Close browser page",
            "type": "MCP_BROWSER_COMMAND",
            "parameters": {
              "action": "close_page"
            }
          },
          "phase": "STEP",
          "taskId": "T006",
          "startTime": "2025-09-30T13:02:41.157Z",
          "success": false,
          "data": null,
          "error": "MCP error: MCP error -32602: Invalid arguments for tool close_page: [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"number\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"pageIdx\"\n    ],\n    \"message\": \"Required\"\n  }\n]",
          "endTime": "2025-09-30T13:02:41.158Z",
          "durationMs": 1
        }
      ],
      "status": "FAILED",
      "validationResult": {
        "passed": false,
        "successConditions": [],
        "failureConditions": [],
        "evaluations": [
          {
            "condition": "PREREQ['1'].success === true && PREREQ['1'].exists === true",
            "description": "MCP executor exists",
            "passed": true
          },
          {
            "condition": "STEP['1'].success === true && STEP['1'].initialized === true",
            "description": "MCP initialized successfully",
            "passed": true
          },
          {
            "condition": "STEP['2'].success === true && STEP['2'].count > 0",
            "description": "MCP tools are available",
            "passed": true
          },
          {
            "condition": "STEP['3'].success === true",
            "description": "Browser page created and navigated",
            "passed": true
          },
          {
            "condition": "STEP['4'].success === true",
            "description": "Snapshot captured",
            "passed": true
          },
          {
            "condition": "STEP['5'].success === true",
            "description": "Browser closed cleanly",
            "passed": false
          }
        ]
      },
      "endTime": "2025-09-30T13:02:41.162Z",
      "durationMs": 3475
    }
  },
  "summary": {
    "total": 1,
    "passed": 0,
    "failed": 1,
    "skipped": 0
  },
  "endTime": "2025-09-30T13:02:41.164Z",
  "durationMs": 3480,
  "metadata": {
    "generatedBy": "CODOR Test Execution Engine v2.0",
    "generatedAt": "2025-09-30T13:02:41.164Z",
    "platform": "win32",
    "nodeVersion": "v22.19.0"
  }
}